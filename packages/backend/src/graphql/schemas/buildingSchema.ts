import {gql} from 'apollo-server';

export const buildingSchema = `
  type Building {
    id: ID!,
    buildingName: String!,
    buildingAddress: String!,
    buildingCity: String!,
    buildingState: String!,
    photos: [String]
    reviewCount: Int,
    totalScore: Float,
    envScore: Float,
    secScore: Float,
    isDisFrd: Boolean,
    isDisFrdCount: Int,
    hasParking: Boolean,
    hasParkingCount: Int,
    frontdesk: Boolean, 
    frontdeskCount: Int, 
    concierge: Boolean,
    conciergeCount: Int,
    gatedCommunity: Boolean,
    gatedCommunityCount: Int,
    EVCharging: Boolean, 
    EVChargingCount: Int, 
    guestParking: Boolean, 
    guestParkingCount: Int, 
    coveredParking: Boolean,
    coveredParkingCount: Int,  
    reservedSpot: Boolean, 
    reservedSpotCount: Int, 
    freeParking: Boolean,
    freeParkingCount: Int,
    cleaningService: Boolean,
    cleaningServiceCount: Int,  
    quietHours: Boolean, 
    quietHoursCount: Int,
    trashPickUp: Boolean, 
    trashPickUpCount: Int,
    staffOnDuty: Boolean,
    staffOnDutyCount: Int, 
    maintenanceTeam: Boolean,
    maintenanceTeamCount: Int,
    microwave: Boolean, 
    microwaveCount: Int, 
    stove: Boolean, 
    stoveCount: Int,
    dishwasher: Boolean, 
    dishwasherCount: Int, 
    fridge: Boolean, 
    fridgeCount: Int,
    washer: Boolean, 
    washerCount: Int, 
    dryer: Boolean, 
    dryerCount: Int, 
    AC: Boolean,
    ACCount: Int,
    cableInstalled: Boolean, 
    cableInstalledCount: Int, 
    wifiInstalled: Boolean,
    wifiInstalledCount: Int,
    walkInCloset: Boolean, 
    walkInClosetCount: Int, 
    balcony: Boolean, 
    balconyCount: Int, 
    gym: Boolean, 
    gymCount: Int,
    pool: Boolean,
    poolCount: Int,  
    elevator: Boolean,
    elevatorCount: Int,  
    lounge: Boolean,
    loungeCount: Int, 
    mailRoom: Boolean,
    mailRoomCount: Int, 
    dogPark: Boolean,
    dogParkCount: Int,
    petNumMax: Int, 
    onlyCatDog: Boolean
    onlyCatDogCount: Int
  }
  extend type Query {
    buildingID(id: ID!): Building!
    buildingName(buildingName: String!): Building!
    buildings: [Building!]
    buildingSearch(buildingName: String!): [Building!]
    advancedBuildingSearch(totalScore: Int!, envScore: Int!, secScore: Int!, buildingName: String!, 
    buildingCity: String!, buildingState: String!, fields: [String!]!): [Building!]
    
   
    hasFeature(field: String!): [Building!]
    hasMultiFeatures(fields: [String!]!): [Building!]
    goodTotalScore: [Building!]
    goodEnvScore: [Building!]
    goodSecScore: [Building!]
    
    buildingByCity(buildingCity: String!): [Building!]
    buildingByState(buildingState: String!): [Building!]
    
  }
  extend type Mutation {
    createBuilding(
    buildingName: String!,
    buildingAddress: String!,
    buildingCity: String!,
    buildingState: String!,
    photos: Upload,
    reviewCount: Int,
    totalScore: Float,
    envScore: Float,
    secScore: Float,
    isDisFrd: Boolean,
    isDisFrdCount: Int,
    hasParking: Boolean,
    hasParkingCount: Int,
    frontdesk: Boolean, 
    frontdeskCount: Int, 
    concierge: Boolean,
    conciergeCount: Int,
    gatedCommunity: Boolean,
    gatedCommunityCount: Int,
    EVCharging: Boolean, 
    EVChargingCount: Int, 
    guestParking: Boolean, 
    guestParkingCount: Int, 
    coveredParking: Boolean,
    coveredParkingCount: Int,  
    reservedSpot: Boolean, 
    reservedSpotCount: Int, 
    freeParking: Boolean,
    freeParkingCount: Int,
    cleaningService: Boolean,
    cleaningServiceCount: Int,  
    quietHours: Boolean, 
    quietHoursCount: Int,
    trashPickUp: Boolean, 
    trashPickUpCount: Int,
    staffOnDuty: Boolean,
    staffOnDutyCount: Int, 
    maintenanceTeam: Boolean,
    maintenanceTeamCount: Int,
    microwave: Boolean, 
    microwaveCount: Int, 
    stove: Boolean, 
    stoveCount: Int,
    dishwasher: Boolean, 
    dishwasherCount: Int, 
    fridge: Boolean, 
    fridgeCount: Int,
    washer: Boolean, 
    washerCount: Int, 
    dryer: Boolean, 
    dryerCount: Int, 
    AC: Boolean,
    ACCount: Int,
    cableInstalled: Boolean, 
    cableInstalledCount: Int, 
    wifiInstalled: Boolean,
    wifiInstalledCount: Int,
    walkInCloset: Boolean, 
    walkInClosetCount: Int, 
    balcony: Boolean, 
    balconyCount: Int, 
    gym: Boolean, 
    gymCount: Int,
    pool: Boolean,
    poolCount: Int,  
    elevator: Boolean,
    elevatorCount: Int,  
    lounge: Boolean,
    loungeCount: Int, 
    mailRoom: Boolean,
    mailRoomCount: Int, 
    dogPark: Boolean,
    dogParkCount: Int,
    petNumMax: Int, 
    onlyCatDog: Boolean
    onlyCatDogCount: Int): Building!
  }
`;
